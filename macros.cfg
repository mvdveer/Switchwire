
#####################################################################
#   Macros
#####################################################################

#   Use PRINT_START for the slicer starting script - PLEASE CUSTOMISE THE SCRIPT
[gcode_macro PRINT_START]
gcode:
    STATUS_READY
    BED_MESH_CLEAR
    G90      #Absolute positioning
    STATUS_HOMING
    M117 Homing...
    G28
    STATUS_HEATING
    M117 Heating bed ......
    M140 S{params.BED_TEMP}
    M190 S{params.BED_TEMP}
    M109 S150
    #STATUS_LEVELING
    #M117 Leveling Gantry ........
    #Z_TILT_ADJUST
    STATUS_MESHING
    M117 Adaptive bed mesh ......
    BED_MESH_CALIBRATE
    M117 Loading Mesh ........
    BED_MESH_PROFILE Load=default
    M117 Move to print area  ....
    SMART_PARK
    # G0 X125 Y125 Z20 F3600
    STATUS_HEATING
    M117 Heating Toolhead .....
    M104 S{params.TOOL_TEMP}
    M109 S{params.TOOL_TEMP}
    STATUS_CLEANING
    VORON_PURGE
    #ADAPTIVE_PURGE
    STATUS_READY
    G90
    STATUS_PRINTING
    M117 Starting Print .......


[gcode_macro Prime_Line]
gcode:
    M117 Prime Line ..........
    G92 E0.0            #reset extruder distance position
    G1 X10 Y10 Z0.3 F3000       #move to prime line position
    G1 X60 E10.0 F1000  #intro line
    G1 X180 E30 F500   # intro line
    G92 E0.0      #reset extruder distance position

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script
gcode:
    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    
    #   Check end position to determine safe directions to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}
    
    #  Commence PRINT_END
    M400                             ; wait for buffer to clear
    G92 E0                           ; zero the extruder
    G1 E-4.0 F3600                   ; retract
    G91                              ; relative positioning
    G0 Z{z_safe} F3600               ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000    ; move nozzle to remove stringing
    
    M104 S0                          ; turn off hotend
    M140 S0                          ; turn off bed
    M106 S0                          ; turn off fan
    G90                              ; absolute positioning
    G0 X{max_x / 2} Y{max_y} F3600   ; park nozzle at rear

###############################################################
# BED MESH
###############################################################

[gcode_macro LOAD_MESH_TEMP]
#default_parameter_BED_TEMPERATURE: 0
#default_parameter_FORCE: 0
gcode:
    {action_respond_info("- AUTOMATED BED MESH GENERATOR -")}
    {% if BED_TEMPERATURE|int < 30 %}
        {action_respond_info("Your bed temp is to low, make sure it is at least 30 or higher")}
    {% else %}
        {% if printer.configfile.config["bed_mesh " + BED_TEMPERATURE] is defined and FORCE|int == 0 %}
            BED_MESH_PROFILE LOAD={BED_TEMPERATURE}
            {action_respond_info("Succesfully loaded bed_mesh "+ BED_TEMPERATURE)}
        {% else %}
            {% if printer.configfile.config["bed_mesh " + BED_TEMPERATURE] is defined and FORCE|int == 1 %}
                BED_MESH_PROFILE REMOVE={BED_TEMPERATURE}
            {% endif %}
            {action_respond_info("bed_mesh not defined, your bed temperature will go up!")}
            {action_respond_info("We will probe the bed and save the mesh as bed_mesh "+ BED_TEMPERATURE)}
            ADD_BED_MESH TARGET_TEMP={BED_TEMPERATURE}
        {% endif %}
    {% endif %}

[gcode_macro ADD_BED_MESH]
#default_parameter_TARGET_TEMP: 30
gcode:
    M190 S{TARGET_TEMP} # Wait for the bed to hit TARGET_TEMP
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE SAVE={TARGET_TEMP}

[gcode_macro SET_RETRACTIONLENGTH]
gcode:
  SET_RETRACTION RETRACT_LENGTH={params.LENGTH|float}
  GET_RETRACTION

[gcode_macro G29]
gcode: 
  G28
  BED_MESH_CALIBRATE
  BED_MESH_PROFILE SAVE=p1
  G1 X10 Y10 Z5 F4000

########################################################
# M600 Macro to change filament
#########################################################

[gcode_macro M600]
#default_parameter_X: 10
#default_parameter_Y: 0
#default_parameter_Z: 10
gcode:
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{10}
    G90
    G1 X{330} Y{330} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state


######################################################
#    Mainsail klipper macro definitions
#####################################################

[virtual_sdcard]
path: ~/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[pause_resume]

[display_status]

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos  : False ; use custom park coordinates for x,y [True/False] 
variable_custom_park_x   : 0.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y   : 0.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz  : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position 
variable_retract         : 1.0   ; the value to retract while PAUSE
variable_cancel_retract  : 3.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract   : 35.0  ; retract speed in mm/s
variable_unretract       : 1.0   ; the value to unretract while RESUME
variable_speed_unretract : 35.0  ; unretract speed in mm/s
variable_speed_hop       : 15.0  ; z move speed in mm/s
variable_speed_move      : 100.0 ; move speed in mm/s
variable_park_at_cancel  : True ; allow to move the toolhead to park while execute CANCEL_PRINT [True,False]

## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract  : False ; use fw_retraction instead of the manual version [True/False] 

gcode:

## After you uncomment it add your custom values

## You now can use your PAUSE macro direct in your M600 here a short example:

#[gcode_macro M600]
#description: Filament change
#gcode: PAUSE X=10 Y=10 Z_MIN=50

## That will park your head front left with a minimum height of 50mm above the bed. If your head
## is already above 50mm it will use only the z_hop specified with dz.


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  ##### get user parameters or use default #####
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
  {% set allow_park = False if not macro_found
                 else False if client.park_at_cancel is not defined
                 else True  if client.park_at_cancel|lower == 'true'
                 else False %}
  {% set retract      = 5.0  if not macro_found else client.cancel_retract|default(5.0)|abs %}
  {% set sp_retract   = 2100 if not macro_found else client.speed_retract|default(35) * 60 %}
  ##### end of definitions #####
  {% if not printer.pause_resume.is_paused and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {% endif %}
  {% if printer.extruder.can_extrude %}
    M83
    G1 E-{retract} F{sp_retract}
    {% if printer.gcode_move.absolute_extrude %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  TURN_OFF_HEATERS
  M106 S0
  CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### get user parameters or use default #####
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
  {% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
  {% set use_fw_retract = False if not macro_found
                     else False if client.use_fw_retract is not defined
                     else True  if client.use_fw_retract|lower == 'true' and printer.firmware_retraction is defined
                     else False %} 
  {% set unretract      = 1.0  if not macro_found else client.unretract|default(1.0)|abs %}
  {% set sp_unretract   = 2100 if not macro_found else client.speed_unretract|default(35) * 60 %}
  {% set sp_move        = velocity if not macro_found else client.speed_move|default(velocity) %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude %}
    {% if use_fw_retract %}
      G11
    {% else %}
      M83
      G1 E{unretract} F{sp_unretract}
      {% if printer.gcode_move.absolute_extrude %} M82 {% endif %}
    {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough %s" % use_fw_retract)}
  {% endif %}  
  RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}  

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode:
  ##### get user parameters or use default #####
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
  {% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
  {% set use_custom     = False if not macro_found
                     else False if client.use_custom_pos is not defined
                     else True  if client.use_custom_pos|lower == 'true' 
                     else False %}
  {% set custom_park_x  = 0.0 if not macro_found else client.custom_park_x|default(0.0) %}
  {% set custom_park_y  = 0.0 if not macro_found else client.custom_park_y|default(0.0) %}
  {% set park_dz        = 2.0 if not macro_found else client.custom_park_dz|default(2.0)|abs %}
  {% set use_fw_retract = False if not macro_found
                     else False if client.use_fw_retract is not defined
                     else True  if client.use_fw_retract|lower == 'true' and printer.firmware_retraction is defined
                     else False %}
  {% set retract      = 1.0  if not macro_found else client.retract|default(1.0)|abs %}
  {% set sp_retract   = 2100 if not macro_found else client.speed_retract|default(35) * 60 %}
  {% set sp_hop       = 900  if not macro_found else client.speed_hop|default(15) * 60 %}
  {% set sp_move      = velocity * 60 if not macro_found else client.speed_move|default(velocity) * 60 %}
  ##### get config and toolhead values #####
  {% set act = printer.toolhead.position %}
  {% set max = printer.toolhead.axis_maximum %}
  {% set cone = printer.toolhead.cone_start_z|default(max.z) %} ; height as long the toolhead can reach max and min of an delta
  {% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch'] 
                else False %}
  ##### define park position #####
  {% set z_min = params.Z_MIN|default(0)|float %}
  {% set z_park = [[(act.z + park_dz), z_min]|max, max.z]|min %}
  {% set x_park = params.X       if params.X is defined
             else custom_park_x  if use_custom
             else 0.0            if round_bed 
             else (max.x - 5.0) %}
  {% set y_park = params.Y       if params.Y is defined
             else custom_park_y  if use_custom
             else (max.y - 5.0)  if round_bed and z_park < cone
             else 0.0            if round_bed
             else (max.y - 5.0) %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude %}
    {% if use_fw_retract %}
      G10
    {% else %}
      M83
      G1 E-{retract} F{sp_retract}
      {% if printer.gcode_move.absolute_extrude %} M82 {% endif %}
    {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G90
    G1 Z{z_park} F{sp_hop}
    G1 X{x_park} Y{y_park} F{sp_move}
    {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[gcode_macro M0]
gcode:
    G4 P5000   